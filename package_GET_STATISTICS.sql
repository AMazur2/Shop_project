CREATE OR REPLACE PACKAGE GET_STATISTICS IS
FUNCTION BEST_SELLING_PRODUCT
RETURN P_TOWARY.ID_TOW%TYPE;
FUNCTION PROFIT
RETURN P_TOWARY.CENA%TYPE;
FUNCTION BEST_CLIENT
RETURN P_KLIENCI.ID_KLI%TYPE
END GET_STATISTICS;
/
CREATE OR REPLACE PACKAGE BODY GET_STATISTICS IS
FUNCTION BEST_SELLING_PRODUCT
RETURN P_TOWARY.ID_TOW%TYPE
AS
P_ID_BESTSELLER P_TOWARY.ID_TOW%TYPE := 0;
P_ID_CURRENT P_TOWARY.ID_TOW%TYPE := 0;
P_QUANTATY P_TOWARY_ZAMOWIENIA.ILOSC%TYPE := 0;
P_CURRENT_QUANTATY P_TOWARY_ZAMOWIENIA.ILOSC%TYPE := 0;
CURSOR C IS
    SELECT ID_TOWARU 
    FROM P_TOWARY_ZAMOWIENIA
    GROUP BY ID_TOWARU;
BEGIN
FOR i IN C
LOOP
    P_ID_CURRENT := i.ID_TOWARU;
    FOR REKORD IN(SELECT ILOSC 
                    FROM P_TOWARY_ZAMOWIENIA 
                    WHERE ID_TOWARU LIKE P_ID_CURRENT)
    LOOP
        P_CURRENT_QUANTATY := P_CURRENT_QUANTATY + REKORD.ILOSC;
    END LOOP;
    IF(P_CURRENT_QUANTATY > P_QUANTATY) THEN
        P_QUANTATY := P_CURRENT_QUANTATY;
        P_ID_BESTSELLER := P_ID_CURRENT;
        P_CURRENT_QUANTATY := 0;
    ELSE
        P_CURRENT_QUANTATY := 0;
    END IF;
END LOOP;
DBMS_OUTPUT.PUT_LINE('ID NAJLEPIEJ SPRZEDAJACEGO SIE PRODUKTU: ' ||
                    P_ID_BESTSELLER || ' W ILOSCI: ' ||
                    P_QUANTATY);
RETURN P_ID_BESTSELLER;
END BEST_SELLING_PRODUCT;

FUNCTION PROFIT
RETURN P_TOWARY.CENA%TYPE
AS
P_PROFITS P_TOWARY.CENA%TYPE := 0;
CURSOR C IS
    SELECT T.ID_TOW, T.CENA, TZ.ILOSC 
    FROM P_TOWARY_ZAMOWIENIA TZ INNER JOIN P_TOWARY T
    ON (T.ID_TOW = TZ.ID_TOWARU);
BEGIN
FOR i IN C
LOOP
    P_PROFITS := P_PROFITS + i.CENA * i.ILOSC;
END LOOP;
DBMS_OUTPUT.PUT_LINE('W SKLEPIE ZROBIONO ZAKUPY ZA LACZNA KWOTE: ' ||
                        P_PROFITS || ' ZL');
RETURN P_PROFITS;
END PROFIT;

FUNCTION BEST_CLIENT
RETURN P_KLIENCI.ID_KLI%TYPE
AS
P_ID_CLIENT P_KLIENCI.ID_KLI%TYPE := 0;
P_ID_CURRENT P_KLIENCI.ID_KLI%TYPE := 0;
P_SPENDINGS P_TOWARY.CENA%TYPE := 0;
P_CURRENT_SPENDINGS P_TOWARY.CENA%TYPE := 0;
CURSOR C IS
    SELECT ID_KLIENTA
    FROM P_ZAMOWIENIA
    GROUP BY ID_KLIENTA;
BEGIN
FOR i IN C
LOOP
    P_ID_CURRENT := i.ID_KLIENTA;
    FOR RECORD IN (SELECT T.CENA, TZ.ILOSC
                    FROM P_TOWARY T
                    INNER JOIN P_TOWARY_ZAMOWIENIA TZ ON (T.ID_TOW = TZ.ID_TOWARU)
                    INNER JOIN P_ZAMOWIENIA Z ON (Z.ID_ZAM = TZ.ID_ZAMOWIENIA)
                    WHERE Z.ID_KLIENTA LIKE P_ID_CURRENT)
    LOOP
        P_CURRENT_SPENDINGS := P_CURRENT_SPENDINGS + RECORD.CENA*RECORD.ILOSC;
    END LOOP;
    IF (P_CURRENT_SPENDINGS > P_SPENDINGS) THEN
        P_ID_CLIENT := P_ID_CURRENT;
        P_SPENDINGS := P_CURRENT_SPENDINGS;
        P_CURRENT_SPENDINGS := 0;
    ELSE
        P_CURRENT_SPENDINGS := 0;
    END IF;
END LOOP;
DBMS_OUTPUT.PUT_LINE('NAJWIECEJ WYDAL KLIENT O ID: ' || P_ID_CLIENT
                        || ' WYDAL ON: ' || P_SPENDINGS || ' ZL');
RETURN P_ID_CLIENT;
END BEST_CLIENT;
END GET_STATISTICS;